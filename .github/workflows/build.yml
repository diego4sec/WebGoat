name: Build WebGoat
permissions:
  contents: read
  packages: write
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the WebGoat repository
      - name: Checkout WebGoat
        uses: actions/checkout@v4
        with:
          repository: diego4sec/WebGoat
          ref: main  # Specify a branch, tag, or commit

      # Step 2: Set up a newer JDK (e.g., Java 17 or 20)
      - name: Set up Java 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'  # Replace with '20' if you want Java 20
          distribution: 'temurin'  # 'adopt' can also be used
          cache: maven
      # check java version
      - name: Check Java version
        run: java -version
      # Step 3: Build the project with Maven
      - name: Build with Maven
        run: mvn clean package -B -DskipTests
        # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      #  Step 5: Run Semgrep Security Scan
      # Correct Semgrep GitHub Action Step
      - name: Run Semgrep Security Scan
        uses: returntocorp/semgrep-action@v1
        with: 
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }} # Optional, only for Semgrep Cloud
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }} # Optional for Semgrep Cloud

      # Step 6: Login to GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Extract metadata for Docker
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/webgoat
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      # Step 8: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 9: Upload the built JAR file as an artifact
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webgoat-jar
          path: target/*.jar  # Adjust path if JAR is stored elsewhere
